%!PS-Adobe-3.0 EPSF-3.0
%%BoundingBox: 0 0 3360 1680 
%%LanguageLevel: 2
%%Creator: CorelDRAW X8
%%Title: lettter dm md logo template.eps
%%CreationDate: Fri Apr 22 00:08:53 2022
%%DocumentProcessColors: Cyan Magenta Yellow Black 
%%DocumentSuppliedResources: (atend)
%%EndComments
%%BeginProlog
/AutoFlatness false def
/AutoSteps 0 def
/CMYKMarks true def
/DocPsLevel 2 def
%Build: CorelDRAW X8 Version 18.0.0.448
/EpsFile true def
%%BeginResource: procset wCorel18Dict 18.0 0
/wCorel18Dict 300 dict def wCorel18Dict begin
%----------------------------------------------------------------------------
% Core Corel PostScript prolog functions
/bd{bind def}bind def/ld{load def}bd/xd{exch def}bd/rp{{pop}repeat}bd/dexec{
exch begin cvx exec end}bd/@cp/closepath ld/@gs/gsave ld/@gr/grestore ld/@np
/newpath ld/Tl/translate ld/$sv 0 def/@sv{/$sv save def}bd/@rs{$sv restore}bd
/spg/showpage ld/showpage{}bd currentscreen/@dsp xd/$dsp/@dsp def/$dsa xd/$dsf
xd/$sdf false def/$SDF false def/$Scra 0 def/SetScr/setscreen ld/@ss{2 index 0
eq{$dsf 3 1 roll 4 -1 roll pop}if exch $Scra add exch load SetScr}bd
/SeparationMode where{pop}{/SeparationMode/Composite def}ifelse
/SeparationPlateName where{pop}{/SeparationPlateName null def}ifelse
/SeparateInColor where{pop}{/SeparateInColor false def}ifelse/EpsFile where
{pop}{/EpsFile false def}ifelse/FillOverprint false def/$fil 0 def
/OutlineOverprint 0 def/$PF false def/$bkg false def/CurrentOverprint false def
matrix currentmatrix/$ctm xd/$ptm matrix def/$ttm matrix def/$stm matrix def
/$ffpnt true def/CorelDrawReencodeVect[16#0/grave 16#5/breve 16#6/dotaccent
16#8/ring 16#A/hungarumlaut 16#B/ogonek 16#C/caron 16#D/dotlessi
16#27/quotesingle 16#60/grave 16#7C/bar 16#80/Euro
16#82/quotesinglbase/florin/quotedblbase/ellipsis/dagger/daggerdbl
16#88/circumflex/perthousand/Scaron/guilsinglleft/OE
16#91/quoteleft/quoteright/quotedblleft/quotedblright/bullet/endash/emdash
16#98/tilde/trademark/scaron/guilsinglright/oe 16#9F/Ydieresis
16#A1/exclamdown/cent/sterling/currency/yen/brokenbar/section
16#a8/dieresis/copyright/ordfeminine/guillemotleft/logicalnot/minus/registered/macron
16#b0/degree/plusminus/twosuperior/threesuperior/acute/mu/paragraph/periodcentered
16#b8/cedilla/onesuperior/ordmasculine/guillemotright/onequarter/onehalf/threequarters/questiondown
16#c0/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE/Ccedilla
16#c8/Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis
16#d0/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/multiply
16#d8/Oslash/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute/Thorn/germandbls
16#e0/agrave/aacute/acircumflex/atilde/adieresis/aring/ae/ccedilla
16#e8/egrave/eacute/ecircumflex/edieresis/igrave/iacute/icircumflex/idieresis
16#f0/eth/ntilde/ograve/oacute/ocircumflex/otilde/odieresis/divide
16#f8/oslash/ugrave/uacute/ucircumflex/udieresis/yacute/thorn/ydieresis]def
/get_ps_level/languagelevel where{pop systemdict/languagelevel get exec}{1}
ifelse def/Level2 get_ps_level 2 ge def/Level3 get_ps_level 3 ge def
/AdobeDistiller/product where{pop systemdict/setdistillerparams known product
(Adobe PostScript Parser)ne and}{false}ifelse def/InRipSeparation
AdobeDistiller{false}{Level2{currentpagedevice/Separations 2 copy known{get}{
pop pop false}ifelse}{false}ifelse}ifelse def/ColorSeparationLevel1 1 0 0 0
gsave setcmykcolor currentcmykcolor grestore add add add 0 ne 0 1 0 0 gsave
setcmykcolor currentcmykcolor grestore add add add 0 ne 0 0 1 0 gsave
setcmykcolor currentcmykcolor grestore add add add 0 ne 0 0 0 1 gsave
setcmykcolor currentcmykcolor grestore add add add 0 ne and and and not def
/ColorSeparation/LumSepsDict where{pop false}{/AldusSepsDict where{pop false}{
InRipSeparation{true}{ColorSeparationLevel1}ifelse}ifelse}ifelse def
/IsColorDevice/deviceinfo where{pop deviceinfo/Colors known{deviceinfo/Colors
get exec 1 gt}{false}ifelse}{/statusdict where{pop statusdict/processcolors
known{statusdict/processcolors get exec 1 gt}{false}ifelse}{false}ifelse}
ifelse def/get_simulate_devicen get_ps_level 2 eq{{SeparationMode/OnHost ne
InRipSeparation AdobeDistiller or and}bind}{false}ifelse def/DocGrayScaleSpace
[/DeviceGray]def/DocRgbSpace[/DeviceRGB]def/DocCmykSpace[/DeviceCMYK]def
/DocLabSpace[/CIEBasedABC <</BlackPoint[0 0 0]/WhitePoint[0.9637 1.0000 0.8241
]/RangeABC[0 100 -128 127 -128 127]/DecodeABC[{16 add 116 div}bind{500 div}
bind{200 div}bind]/MatrixABC[1 1 1 1 0 0 0 0 -1]/DecodeLMN[{dup 0.206897 ge{dup
dup mul mul}{0.137931 sub 0.128419 mul}ifelse 0.9637 mul}bind{dup 0.206897
ge{dup dup mul mul}{0.137931 sub 0.128419 mul}ifelse 1.0000 mul}bind{dup
0.206897 ge{dup dup mul mul}{0.137931 sub 0.128419 mul}ifelse 0.8241 mul}bind]
>>]def/validate_cie_colorspace_whitepoint{load dup aload pop/WhitePoint get 1
1.0 put pop}bd/set_cie_colorspaces{/DocGrayScaleSpaceCIE where{pop
/DocGrayScaleSpaceCIE validate_cie_colorspace_whitepoint/DocGrayScaleSpace xd
DocGrayScaleSpace aload pop begin pop/DecodeA where{pop DecodeA type/arraytype
eq{DecodeA aload pop/DecodeA exch def}if}if end}if/DocRgbSpaceCIE where{pop
/DocRgbSpaceCIE validate_cie_colorspace_whitepoint/DocRgbSpace xd}if
/DocCmykSpaceCIE where{pop/DocCmykSpaceCIE validate_cie_colorspace_whitepoint
/DocCmykSpace xd}if}bd/set_rendering_intent{Level3{findcolorrendering{
/ColorRendering findresource setcolorrendering}{dup/DefaultColorRendering eq{
pop}{/ColorRendering findresource setcolorrendering}}ifelse}{pop}ifelse}bd
/findcmykcustomcolor where{pop}{/findcmykcustomcolor{5 array astore}def}ifelse
/setcustomcolor where SeparationMode/OnHost ne and{pop}{/tint_cmyk_color{5 -1
roll dup 1 ge{pop}{4{dup 6 -1 roll mul exch}repeat pop}ifelse}bd
/setprocesscolor_5{SepMode_5 0 eq{SetCmyk_5}{SepsColor not{4 1 roll pop pop pop
1 exch sub SetGry}{SetCmyk_5}ifelse}ifelse}bd/setcustomcolor{exch aload pop
SepMode_5 0 eq{pop tint_cmyk_color setprocesscolor_5}{CurrentInkName_5 eq{4
index}{0}ifelse 6 1 roll 5 rp 1 sub neg SetGry}ifelse}bd}ifelse
/convert_rgb_to_cmyk{dup type/dicttype eq{}{3{1 exch sub 3 1 roll}repeat 3 copy
min min 3{dup 5 -1 roll sub neg exch}repeat}ifelse}bd/safe_setcolorspace{dup
currentcolorspace eq{pop}{setcolorspace}ifelse}bd/safe_setoverprint{dup type
/booleantype eq{dup currentoverprint ne{setoverprint}{pop}ifelse}{1 eq
setoverprint}ifelse}bd/is_cmyk_channel_name{/channel_name xd channel_name/Cyan
eq channel_name/Magenta eq or channel_name/Yellow eq or channel_name/Black eq
or{true}{false}ifelse}bd/is_rgb_channel_name{/channel_name xd channel_name/Red
eq channel_name/Green eq or channel_name/Blue eq or{true}{false}ifelse}bd
/is_spot_channel_name{/channel_name xd channel_name is_cmyk_channel_name
channel_name is_rgb_channel_name or channel_name/Gray eq or{false}{true}ifelse
}bd/spot_tint_transform_proc{/alternativeSpace xd/alternativeColors xd/tint xd
alternativeSpace DocLabSpace eq{/mixMethod/Additive def/altSpaceNumChannels 3
def}{alternativeSpace DocCmykSpace eq{/mixMethod/Subtractive def
/altSpaceNumChannels 4 def}{alternativeSpace DocRgbSpace eq{/mixMethod
/Additive def/altSpaceNumChannels 3 def}{alternativeSpace DocGrayScaleSpace eq
{/mixMethod/Additive def/altSpaceNumChannels 1 def}if}ifelse}ifelse}ifelse
alternativeSpace DocLabSpace eq{alternativeColors aload pop tint mul 3 1 roll
tint mul 3 1 roll dup 100 exch sub 1 tint sub mul add 3 1 roll}{/tintedColor
altSpaceNumChannels{0.0}repeat altSpaceNumChannels array astore def 0 1
altSpaceNumChannels 1 sub{/altChannelIndex exch def alternativeColors
altChannelIndex get mixMethod/Additive eq{1.0 exch sub tint mul 1.0 exch sub}{
tint mul}ifelse tintedColor altChannelIndex 3 2 roll put}for tintedColor aload
pop}ifelse}bd/devicen_colorant_mixer_proc{/numChannels xd/alternativeSpace xd
/channelNames xd/alternativeColors xd numColorants array astore/colorants xd
/is_spot_channel_name_loc{is_spot_channel_name}bind def alternativeSpace
DocCmykSpace eq{/mixMethod/Subtractive def/altSpaceNumChannels 4 def
/is_spot_channel_name_loc{is_cmyk_channel_name not}bind def}{alternativeSpace
DocRgbSpace eq{/mixMethod/Additive def/altSpaceNumChannels 3 def
/is_spot_channel_name_loc{is_rgb_channel_name not}bind def}{alternativeSpace
DocGrayScaleSpace eq{/mixMethod/Additive def/altSpaceNumChannels 1 def
/is_spot_channel_name_loc{/Gray ne}bind def}if}ifelse}ifelse mixMethod
/Additive eq{/mixedColor altSpaceNumChannels{0.0}repeat altSpaceNumChannels
array astore def/bProcessPlateTinted false def 0 1 numChannels 1 sub{
/channelIndex exch def channelNames channelIndex get is_spot_channel_name_loc
/bSpotChannel xd/sourceChannel colorants channelIndex get def/bWhiteBackground
0 mixedColor{add}forall altSpaceNumChannels div 0.999 gt bProcessPlateTinted
and def bSpotChannel bProcessPlateTinted not and{/bSpotChannel false def}if 0 1
altSpaceNumChannels 1 sub{/altChannelIndex exch def/mixedChannel mixedColor
altChannelIndex get def sourceChannel alternativeColors channelIndex get
altChannelIndex get 1.0 exch sub mul 1.0 exch sub dup 1.0 gt{pop 1.0}if dup 0.0
lt{pop 0.0}if bSpotChannel{sourceChannel 0.0 gt{mixedChannel mul}{pop
mixedChannel}ifelse}{/bProcessPlateTinted true def globaldict begin
/bSkipDeviceNImage where{pop false}{true}ifelse end DevicenImage and{pop
sourceChannel alternativeColors channelIndex get altChannelIndex get mul
mixedChannel add}{mixedChannel add}ifelse}ifelse dup 1.0 gt{pop 1.0}if dup 0.0
lt{pop 0.0}if mixedColor altChannelIndex 3 2 roll put}for}for}{/mixedColor
altSpaceNumChannels{1}repeat altSpaceNumChannels array astore def 0 1
altSpaceNumChannels 1 sub{/targetIndex exch def 0 1 numColorants 1 sub{
/sourceIndex exch def colorants sourceIndex get alternativeColors sourceIndex
get targetIndex get mul 1 exch sub mixedColor targetIndex get mul mixedColor
targetIndex 3 2 roll put}for mixedColor targetIndex 1 mixedColor targetIndex
get sub put}for}ifelse mixedColor aload pop}bd/ColorSpec 9 dict begin/color[]
def/names[]def/num 0 def/ColorModel null def/ColorSpace[]def/set_color{
ColorSeparationLevel1{convert_to_cmyk/color get aload pop setcmykcolor}{
ColorSpace safe_setcolorspace color aload pop setcolor}ifelse}bd
/separate_set_color{SeparationMode/OnHost eq{separate_color{/set_color dexec
true}{pop currentoverprint{false}{SeparateInColor{0 0 0 0 SetCmyk_5 true}{1
SetGry true}ifelse}ifelse}ifelse}{set_color true}ifelse}bd/separate_color{
currentdict false}bd/convert_to_cmyk{currentdict}bd currentdict end def
/GrayscaleColorSpec ColorSpec 9 dict copy begin/names{/Black}def/num 1 def
/ColorModel/Grayscale def/ColorSpace DocGrayScaleSpace def/separate_color{
currentdict false SeparationMode/OnHost eq{SeparationPlateName/Black eq{
SeparateInColor{pop convert_to_cmyk true}{pop true}ifelse}if}if}bd
/convert_to_cmyk{0 0 0 color aload pop 1 exch sub create_cmyk_color}bd
currentdict end def/create_grayscale_color{GrayscaleColorSpec 9 dict copy begin
/color exch 1 array astore def/ColorSpace DocGrayScaleSpace def currentdict end
}bd/RgbColorSpec ColorSpec 9 dict copy begin/names{/Red/Green/Blue}def/num 3
def/ColorModel/Rgb def/ColorSpace DocRgbSpace def/separate_color{
convert_to_cmyk/separate_color dexec}bd/convert_to_cmyk{color aload pop
convert_rgb_to_cmyk create_cmyk_color}bd currentdict end def/create_rgb_color{
RgbColorSpec 9 dict copy begin 3 array astore/color exch def/ColorSpace
DocRgbSpace def currentdict end}bd/HsbColorSpec ColorSpec 9 dict copy begin
/names{/Hue/Saturation/Brightness}def/num 3 def/ColorModel/Hsb def/ColorSpace
DocRgbSpace def/separate_color{convert_to_cmyk/separate_color dexec}bd
/convert_to_cmyk{color aload pop hsb2rgb convert_rgb_to_cmyk create_cmyk_color
}bd/convert_to_rgb{color aload pop hsb2rgb create_rgb_color}bd currentdict end
def/create_hsb_color{HsbColorSpec 9 dict copy begin 3 array astore/color exch
def/ColorSpace DocRgbSpace def currentdict end}bd/CmykColorSpec ColorSpec 9
dict copy begin/names{/Cyan/Magenta/Yellow/Black}def/num 4 def/ColorModel/Cmyk
def/ColorSpace DocCmykSpace def/separate_color{currentdict false
SeparationPlateIndex 0 ge SeparationPlateIndex 3 le and{color
SeparationPlateIndex get dup 0 gt{3 1 roll pop pop SeparateInColor{0 0 0 4
SeparationPlateIndex roll create_cmyk_color true}{1 exch sub
create_grayscale_color true}ifelse}{pop}ifelse}if}bd/convert_to_cmyk{
currentdict}bd currentdict end def/create_cmyk_color{CmykColorSpec 9 dict copy
begin 4 array astore/color exch def/ColorSpace DocCmykSpace def currentdict end
}bd/SpotColorSpec ColorSpec 9 dict copy begin/num 1 def/ColorModel/Spot def
/set_color{ColorSeparationLevel1{color aload pop get_cmyk_alternative_color
/color get aload pop names aload pop findcmykcustomcolor exch setcustomcolor}{
ColorSpace safe_setcolorspace color aload pop setcolor}ifelse}bd
/separate_color{currentdict false SeparationPlateIndex 4 eq{names aload pop
SeparationPlateName eq{color aload pop dup 0 gt{3 1 roll pop pop
SeparateInColor{pop convert_to_cmyk true}{1 exch sub create_grayscale_color
true}ifelse}{pop}ifelse}if}if}bd/convert_to_cmyk{/alternativeSpace ColorSpace 2
get def/tintTransformProc ColorSpace 3 get def alternativeSpace DocCmykSpace eq
{color aload pop tintTransformProc create_cmyk_color}{alternativeSpace
DocRgbSpace eq{color aload pop tintTransformProc create_rgb_color
/convert_to_cmyk dexec}{alternativeSpace DocGrayScaleSpace eq{0 0 0 color aload
pop 1 sub create_cmyk_color}{0 0 0 1 create_cmyk_color}ifelse}ifelse}ifelse}bd
/get_cmyk_alternative_color{/alternativeSpace ColorSpace 2 get def
alternativeSpace DocCmykSpace eq{alternativeColor aload pop create_cmyk_color}
{alternativeSpace DocRgbSpace eq{alternativeColor aload pop create_rgb_color
/convert_to_cmyk dexec}{alternativeSpace DocGrayScaleSpace eq{alternativeColor
aload pop create_grayscale_color/convert_to_cmyk dexec}{0 0 0 1
create_cmyk_color}ifelse}ifelse}ifelse}bd currentdict end def
/create_spot_colorspace{load/alternativeSpace xd/alternativeColor xd/name xd[
/Separation name alternativeSpace[alternativeColor alternativeSpace
/spot_tint_transform_proc cvx]cvx]}bd/create_spot_color{SpotColorSpec 9 dict
copy begin dup type/arraytype ne{create_spot_colorspace}if/ColorSpace xd/color
exch 1 array astore def ColorSpace 1 get 1 array astore/names xd currentdict
end}bd/DevicenColorSpec SpotColorSpec 9 dict copy begin/ColorModel/DeviceN def
/set_color{Level3{ColorSpace safe_setcolorspace color aload pop setcolor}{
ColorSpace 2 get setcolorspace color aload pop ColorSpace 3 get exec setcolor}
ifelse}bd/separate_color{currentdict false/PlateIndex -1 def 0 1 num 1 sub{dup
names exch get SeparationPlateName eq{/PlateIndex xd exit}if pop}for PlateIndex
0 ge{color PlateIndex get dup 0 gt{SeparateInColor{num 1 sub{0}repeat num
PlateIndex roll ColorSpace create_devicen_color/convert_to_cmyk dexec true}{1
exch sub create_grayscale_color true}ifelse 4 2 roll pop pop}{pop}ifelse}if}bd
/get_ink_as_spot{dup/indexInk xd dup color exch get exch names exch get[1.0 num
1 sub{0}repeat num indexInk roll ColorSpace 3 get exec]ColorSpace 2 get
create_spot_color}bd currentdict end def/create_devicen_colorspace{
/numColorants xd load/alternativeSpace xd bind/tintTransform exch def/names xd
[/DeviceN names alternativeSpace/tintTransform load]}bd/create_devicen_color{
DevicenColorSpec 9 dict copy begin dup type/arraytype ne{
create_devicen_colorspace}if/ColorSpace xd/num ColorSpace 1 get length def
/names ColorSpace 1 get def num array astore/color xd currentdict end}bd
/RegistrationColorSpec ColorSpec 9 dict copy begin/num 1 def/ColorModel
/Registration def/ColorSpace{[/Separation/All DocCmykSpace{dup dup dup}]}def
/names[/All]def/set_color{ColorSeparationLevel1{DocGrayScaleSpace
safe_setcolorspace color aload pop 1 exch sub setcolor}{ColorSpace
safe_setcolorspace color aload pop setcolor}ifelse}bd/separate_color{
SeparateInColor{convert_to_cmyk true}{color aload pop 1 exch sub
create_grayscale_color true}ifelse}bd/convert_to_cmyk{color aload pop dup dup
dup create_cmyk_color}bd currentdict end def/create_registration_color{
RegistrationColorSpec 9 dict copy begin 1 array astore/color xd currentdict end
}bd/LabColorSpec ColorSpec 9 dict copy begin/names{/L/a/b}def/num 3 def
/ColorModel/Lab def/ColorSpace DocLabSpace def/separate_color{convert_to_cmyk
/separate_color dexec}bd/convert_to_cmyk{0 0 0 0 create_cmyk_color}bd
currentdict end def/create_lab_color{LabColorSpec 9 dict copy begin 3 array
astore/color exch def/ColorSpace DocLabSpace def currentdict end}bd
/set_solid_fill{/FillColor xd/$fil 0 def}bd/set_outline{/OutlineColor xd}bd
/CheckLevelCompatibility{/DocPsLevel where{pop DocPsLevel get_ps_level gt{@np
/Courier findfont 12 scalefont setfont 72 144 m
(The PostScript level of Corel document is higher than the PostScript)show 72
132 m(level of this device. Change the PS Level in the Corel application)show
72 120 m(by selecting the PostScript tab in the print dialog, and selecting)
show 72 108 m(document level from the Compatibility drop down list.)show flush
spg quit}if}if}bd/@BeginSysCorelDict{systemdict/Corel30Dict known{systemdict
/Corel30Dict get exec}if systemdict/CorelLexDict known{1 systemdict
/CorelLexDict get exec}if}bd/@EndSysCorelDict{systemdict/Corel30Dict known
{end}if/EndCorelLexDict where{pop EndCorelLexDict}if}bd/AutoFlatness where{pop
AutoFlatness{/@ifl{dup currentflat exch sub 10 gt{
([Error: PathTooComplex; OffendingCommand: AnyPaintingOperator]\n)print flush
@np exit}{currentflat 2 add setflat}ifelse}bd/@fill/fill ld/fill{currentflat{
{@fill}stopped{@ifl}{exit}ifelse}bind loop setflat}bd/@eofill/eofill ld/eofill
{currentflat{{@eofill}stopped{@ifl}{exit}ifelse}bind loop setflat}bd/@clip
/clip ld/clip{currentflat{{@clip}stopped{@ifl}{exit}ifelse}bind loop setflat}
bd/@eoclip/eoclip ld/eoclip{currentflat{{@eoclip}stopped{@ifl}{exit}ifelse}
bind loop setflat}bd/@stroke/stroke ld/stroke{currentflat{{@stroke}stopped
{@ifl}{exit}ifelse}bind loop setflat}bd}if}if/@ssa Level2{{true
setstrokeadjust}}{{}}ifelse bd/d/setdash ld/j/setlinejoin ld/J/setlinecap ld/M
/setmiterlimit ld/w/setlinewidth ld/O{/FillOverprint xd}bd/R{/OutlineOverprint
xd}bd/W/eoclip ld/c/curveto ld/C/c ld/l/lineto ld/L/l ld/rl/rlineto ld/m
/moveto ld/n/newpath ld/N/newpath ld/P{11 rp}bd/u{}bd/U{}bd/A{pop}bd/q/@gs ld
/Q/@gr ld/&{}bd/@j{@sv @np}bd/@J{@rs}bd/g{1 exch sub 0 0 0 4 roll 3
create_cmyk_color set_solid_fill/$fil 0 def}bd/G{1 sub neg 0 0 0 4 -1 roll
create_cmyk_color set_outline}bd/i{dup 0 ne{setflat}{pop}ifelse}bd/v{4 -2 roll
2 copy 6 -2 roll c}bd/V/v ld/y{2 copy c}bd/Y/y ld/@w{matrix rotate/$ptm xd
matrix scale $ptm dup concatmatrix/$ptm xd 1 eq{$ptm exch dup concatmatrix
/$ptm xd}if/patternScallingMatrix where{pop patternScallingMatrix $ptm matrix
concatmatrix/$ptm xd}if 1 w}bd/@g{1 eq dup/$sdf xd{/$scp xd/$sca xd/$scf xd}if
}bd/@G{1 eq dup/$SDF xd{/$SCP xd/$SCA xd/$SCF xd}if}bd/@D{2 index 0 eq{$dsf 3 1
roll 4 -1 roll pop}if 3 copy exch $Scra add exch load SetScr/$dsp xd/$dsa xd
/$dsf xd}bd/$ngx{$SDF{$SCF SeparationMode/Composite eq{$SCA}{$dsa}ifelse $SCP
@ss}if}bd/min{2 copy le{pop}{exch pop}ifelse}bd/max{2 copy ge{pop}{exch pop}
ifelse}bd/in_range{3 -1 roll min max}bd/InRange/in_range load bd/@sqr{dup 0 rl
dup 0 exch rl neg 0 rl @cp}bd/currentscale{1 0 dtransform matrix defaultmatrix
idtransform dup mul exch dup mul add sqrt 0 1 dtransform matrix defaultmatrix
idtransform dup mul exch dup mul add sqrt}bd/@unscale{}bd/wDstChck{2 1 roll dup
3 -1 roll eq{1 add}if}bd/@dot{dup mul exch dup mul add 1 exch sub}bd/@lin{exch
pop abs 1 exch sub}bd/cmyk2rgb{3{dup 5 -1 roll add 1 exch sub dup 0 lt{pop 0}
if exch}repeat pop}bd/rgb2cmyk{3{1 exch sub 3 1 roll}repeat 3 copy min min 3{
dup 5 -1 roll sub neg exch}repeat}bd/rgb2g{2 index .299 mul 2 index .587 mul
add 1 index .114 mul add 4 1 roll pop pop pop}bd/WaldoColor_5 where{pop}{
/CorelImage systemdict/image get def/CorelSetGray systemdict/setgray get def
/CorelGetGray systemdict/currentgray get def/CorelSetTransfer systemdict
/settransfer get def/CorelGetTransfer systemdict/currenttransfer get def
/SetRgb/setrgbcolor ld/GetRgb/currentrgbcolor ld/SetGry/setgray ld/GetGry
/currentgray ld/SetRgb2 systemdict/setrgbcolor get def/GetRgb2 systemdict
/currentrgbcolor get def/SetHsb systemdict/sethsbcolor get def/GetHsb
systemdict/currenthsbcolor get def/rgb2hsb{SetRgb2 GetHsb}bd/hsb2rgb{3 -1 roll
dup floor sub 3 1 roll SetHsb GetRgb2}bd/setcmykcolor where{pop/LumSepsDict
where{pop/SetCmyk_5{LumSepsDict/setcmykcolor get exec}def}{/AldusSepsDict where
{pop/SetCmyk_5{AldusSepsDict/setcmykcolor get exec}def}{/SetCmyk_5
/setcmykcolor ld}ifelse}ifelse}{/setcmykcolor{create_cmyk_color
/separate_set_color dexec/$ffpnt xd}bd/SetCmyk_5{cmyk2rgb SetRgb}bd}ifelse
/currentcmykcolor where{pop/GetCmyk/currentcmykcolor ld}{/GetCmyk{GetRgb
rgb2cmyk}bd}ifelse/setoverprint where{pop}{/setoverprint{/CurrentOverprint xd}
bd}ifelse/currentoverprint where{pop}{/currentoverprint{CurrentOverprint}bd}
ifelse/colorimage where{pop/ColorImage{colorimage}def}{/ColorImage{/ncolors xd
/$multi xd $multi true eq{ncolors 3 eq{/daqB xd/daqG xd/daqR xd pop pop exch
pop abs{daqR pop daqG pop daqB pop}repeat}{/daqK xd/daqY xd/daqM xd/daqC xd pop
pop exch pop abs{daqC pop daqM pop daqY pop daqK pop}repeat}ifelse}{/dataaq xd
{dataaq ncolors dup 3 eq{/$dat xd 0 1 $dat length 3 div 1 sub{dup 3 mul $dat 1
index get 255 div $dat 2 index 1 add get 255 div $dat 3 index 2 add get 255 div
rgb2g 255 mul cvi exch pop $dat 3 1 roll put}for $dat 0 $dat length 3 idiv
getinterval pop}{4 eq{/$dat xd 0 1 $dat length 4 div 1 sub{dup 4 mul $dat 1
index get 255 div $dat 2 index 1 add get 255 div $dat 3 index 2 add get 255 div
$dat 4 index 3 add get 255 div cmyk2rgb rgb2g 255 mul cvi exch pop $dat 3 1
roll put}for $dat 0 $dat length ncolors idiv getinterval}if}ifelse}image}
ifelse}bd}ifelse/currentcmykcolor{GetCmyk}bd/sethsbcolor{hsb2rgb setrgbcolor}
bd/currenthsbcolor{currentrgbcolor rgb2hsb}bd/setgray{dup dup setrgbcolor}bd
/currentgray{currentrgbcolor rgb2g}bd/InsideDCS false def/IMAGE/image ld/image
{InsideDCS{IMAGE}{/EPSDict where{pop SeparationMode/Composite eq{IMAGE}{dup
type/dicttype eq{dup/ImageType get 1 ne{IMAGE}{dup dup/BitsPerComponent get 8
eq exch/BitsPerComponent get 1 eq or currentcolorspace 0 get DocGrayScaleSpace
eq and{SeparationPlateName(Black)eq{IMAGE}{dup/DataSource get/TCC xd/Height get
abs{TCC pop}repeat}ifelse}{IMAGE}ifelse}ifelse}{2 index 1 ne{
SeparationPlateName(Black)eq{IMAGE}{/TCC xd pop pop exch pop abs{TCC pop}
repeat}ifelse}{IMAGE}ifelse}ifelse}ifelse}{IMAGE}ifelse}ifelse}bd}ifelse/$fm 0
def/wfill{1 $fm eq{fill}{eofill}ifelse}bd/@Pf{@sv SeparationMode/Composite eq{
true}{$Psc 0 ne or $ink_5 3 eq or}ifelse{0 J 0 j[]0 d FillOverprint
safe_setoverprint FillColor/separate_set_color dexec pop $ctm setmatrix 72 1000
div dup matrix scale dup concat dup Bburx exch Bbury exch itransform ceiling
cvi/Bbury xd ceiling cvi/Bburx xd Bbllx exch Bblly exch itransform floor cvi
/Bblly xd floor cvi/Bbllx xd $Prm aload pop $Psn load exec}{1 SetGry wfill}
ifelse @rs @np}bd/F{matrix currentmatrix $sdf{$scf $sca $scp @ss}if
FillOverprint safe_setoverprint $fil 1 eq{CorelPtrnDoFill}{$fil 2 eq
{gradient_fill}{$fil 3 eq{@Pf}{get_simulate_devicen FillColor/ColorModel get
/DeviceN eq and{0 1 FillColor/num get 1 sub{dup 0 gt{true safe_setoverprint}if
FillColor/get_ink_as_spot dexec/set_color dexec @gs wfill @gr}for}{FillColor
/separate_set_color dexec{wfill}{@np}ifelse}ifelse}ifelse}ifelse}ifelse $sdf{
$dsf $dsa $dsp @ss}if setmatrix}bd/f{@cp F}bd/S{matrix currentmatrix $ctm
setmatrix $SDF{$SCF $SCA $SCP @ss}if OutlineOverprint safe_setoverprint
get_simulate_devicen OutlineColor/ColorModel get/DeviceN eq and{0 1
OutlineColor/num get 1 sub{dup 0 gt{true safe_setoverprint}if OutlineColor
/get_ink_as_spot dexec/set_color dexec matrix currentmatrix $ptm concat @gs
stroke @gr setmatrix}for}{OutlineColor/separate_set_color dexec{matrix
currentmatrix $ptm concat stroke setmatrix}{@np}ifelse}ifelse $SDF{$dsf $dsa
$dsp @ss}if setmatrix}bd/s{@cp S}bd/B{@gs F @gr S}bd/b{@cp B}bd/_E{5 array
astore exch cvlit xd}bd/@cc{currentfile $dat readhexstring pop}bd/@sm{/$ctm
$ctm currentmatrix def}bd/@E{/Bbury xd/Bburx xd/Bblly xd/Bbllx xd}bd/@c{@cp}bd
/@P{/$fil 3 def/$Psn xd/$Psc xd array astore/$Prm xd}bd/tcc{@cc}def/@B{@gs S
@gr F}bd/@b{@cp @B}bd/init_separation{/SeparationMode where{pop}{
/SeparationMode/Composite def}ifelse/SeparationPlateName where{pop}{
/SeparationPlateName null def}ifelse/SeparateInColor where{pop}{
/SeparateInColor false def}ifelse SeparationMode/Composite eq{
/SeparationPlateIndex -1 def}{/SeparationPlateIndex 4 def}ifelse/CmykPlates[
/Cyan/Magenta/Yellow/Black]def 0 1 3{dup CmykPlates exch get
SeparationPlateName eq{/SeparationPlateIndex xd exit}if pop}for
/CurrentInkName_5 SeparationPlateName def/$ink_5 SeparationPlateIndex def
SeparationMode/OnHost eq{/SepMode_5 2 def}{/SepMode_5 0 def}ifelse/SepsColor
SeparateInColor def}bd/init_separation_from_legacy{EpsFile{/SepMode_5 where{
pop SepMode_5 2 eq{/SeparationMode/OnHost def}{/SeparationMode/Composite def}
ifelse}if/CurrentInkName_5 where{pop/SeparationPlateName CurrentInkName_5 def}
if/$ink_5 where{pop/SeparationPlateIndex $ink_5 def}if/SepsColor where{pop
/SeparateInColor SepsColor def}if}if}bd init_separation_from_legacy/@whi{@gs
-72000 dup m -72000 72000 l 72000 dup l 72000 -72000 l @cp 1 SetGry fill @gr}
bd/@neg{[{1 exch sub}/exec cvx currenttransfer/exec cvx]cvx settransfer @whi}
bd/deflevel 0 def/@sax{/deflevel deflevel 1 add def}bd/@eax{/deflevel deflevel
dup 0 gt{1 sub}if def deflevel 0 gt{/eax load}{eax}ifelse}bd/eax{{exec}forall}
bd/@rax{deflevel 0 eq{@rs @sv}if}bd systemdict/pdfmark known not{/pdfmark
/cleartomark ld}if/wclip{1 $fm eq{clip}{eoclip}ifelse}bd
%----------------------------------------------------------------------------
% Raster images support
/set_image_clipping{concat 3 index 3 index m 3 index 1 index l 2 copy l 1 index
3 index l 3 index 3 index l clip pop pop pop pop}bd/set_image_parameters{/$frg
xd/$bkg xd/$ury xd/$urx xd/$lly xd/$llx xd/$ncl xd/$bts xd/$hei xd/$wid xd}bd
/output_image{/@cc xd @sm @gs set_image_clipping set_image_parameters
SeparationMode/OnHost eq EpsFile and{separate_output_image}{
output_composite_image}ifelse @gr $ctm setmatrix}bd/output_composite_image{
DocPsLevel 3 eq MaskedImage true eq and{output_masked_image}{$bts 1 gt
DocPsLevel 2 eq DocPsLevel 3 eq or and{DevicenImage{output_devicen_image}{
output_color_image}ifelse}{$bts 1 eq{output_monochrome_image}{
output_color_image_level1}ifelse}ifelse}ifelse}bd/separate_output_image{@gs
$bts 1 gt{separate_output_color_image}{separate_output_monochrome_image}ifelse
@gr not{currentoverprint not{1.0 SetGry wfill}if}if @np}bd/set_decode_filter{
ImageCompression/JPEG eq{/DCTDecode filter}{ImageCompression/RLE eq{
/RunLengthDecode filter}{ImageCompression/LZW eq{/LZWDecode filter}if}ifelse}
ifelse}bd/create_datasource{currentfile DevicenImage not get_ps_level 2 gt or{
/ASCII85Decode filter}if set_decode_filter}bd/set_image_strip_parameters{
/stripRows xd/numPlanes xd/stripBuffer $wid $bts mul $ncl mul stripRows mul 8
div ceiling cvi dup 65535 gt{pop $ncl $bts mul}if string def DevicenImage{
/readstrip{DataSource stripBuffer readhexstring pop}bd}{/readstrip{DataSource
stripBuffer readstring pop}bd}ifelse/stripHeight $lly $ury sub stripRows mul
$hei div def/stripOutBuffer $wid stripRows mul numPlanes mul 65535 min string
def/strip_img_dict 8 dict def strip_img_dict begin/ImageType 1 def/Width $wid
def/Height stripRows def/BitsPerComponent $bts def/Decode[numPlanes{0 1}
repeat]def/ImageMatrix[$wid 0 0 stripRows neg 0 $hei 0 gt{stripRows}{0}ifelse]
def/DataSource stripOutBuffer def end}bd/separate_output_color_image{
/plateContent false def $ncl 1 eq{SeparationPlateName/Black eq{
output_color_image/plateContent true def}if}{@np/DataSource create_datasource
def SeparateInColor{DocCmykSpace setcolorspace/numPlanes 4 def}{
DocGrayScaleSpace setcolorspace/numPlanes 1 def}ifelse/stripRows 65535 $wid
$bts mul $ncl numPlanes max mul 8 div div floor cvi 1 max def numPlanes
stripRows set_image_strip_parameters/maxStripIndex $hei stripRows div ceiling
cvi 1 sub def 0 1 maxStripIndex{/stripIndex exch def/$t_ury $ury stripHeight
stripIndex mul add ceiling cvi def/$t_lly $t_ury stripHeight add ceiling cvi
def stripIndex maxStripIndex eq{numPlanes $hei maxStripIndex stripRows mul sub
set_image_strip_parameters/$t_lly $t_ury stripHeight add ceiling cvi def}if
readstrip pop @gs 0 1 $wid stripRows mul 1 sub{/pixelIndex xd stripBuffer
pixelIndex $ncl mul $ncl getinterval{255 div}forall DevicenImage{
ImageDevicenSpace create_devicen_color}{$ncl 3 eq{create_rgb_color}{
create_cmyk_color}ifelse}ifelse/separate_color dexec{/plateContent true def
begin color aload pop end}{pop numPlanes[numPlanes 1 eq{1}{0}ifelse]cvx repeat
}ifelse numPlanes array astore/pixelSepIndex pixelIndex numPlanes mul def
/posColorant 0 def{stripOutBuffer pixelSepIndex posColorant add 3 -1 roll 255
mul cvi put/posColorant posColorant 1 add def}forall}for $llx $t_lly Tl $urx
$llx sub $t_ury $t_lly sub scale strip_img_dict image @gr}for $SDF{$dsf $dsa
$dsp @ss}if}ifelse plateContent}bd/separate_output_monochrome_image{
SeparationPlateName/Black eq{output_monochrome_image true}{false}ifelse}bd
/output_monochrome_image{$frg 1 eq{OutlineOverprint safe_setoverprint
ImageForegroundColor/separate_set_color dexec{1}{0}ifelse/$frg xd}{/$frg false
def}ifelse $bkg 1 eq{@gs $ctm setmatrix F @gr}if @np/$dat $wid $bts mul 8 div
ceiling cvi 65535 min string def $bkg $frg add 1 ge{$SDF{$SCF $SCA $SCP @ss}if
$llx $lly Tl $urx $llx sub $ury $lly sub scale $bkg 1 eq{FillColor
/separate_set_color dexec pop}if $wid $hei abs $bts 1 eq{$bkg 1 ge}{$bts 1 ge}
ifelse[$wid 0 0 $hei neg 0 $hei 0 gt{$hei}{0}ifelse]/tcc load $bts 1 eq
{imagemask}{image}ifelse $SDF{$dsf $dsa $dsp @ss}if}{$hei abs{tcc pop}repeat}
ifelse}bd/output_color_image_level1{@np $ngx $llx $lly Tl $urx $llx sub $ury
$lly sub scale $wid $hei abs $bts[$wid 0 0 $hei neg 0 $hei 0 gt{$hei}{0}ifelse
]/$dat $wid $bts mul $ncl mul 8 div ceiling cvi 65535 min string def $msimage
false eq $ncl 1 eq or{/@cc load false $ncl ColorImage}{$wid $bts mul 8 div
ceiling cvi $ncl 3 eq{dup dup/$dat1 exch string def/$dat2 exch string def
/$dat3 exch string def/@cc1 load/@cc2 load/@cc3 load}{dup dup dup/$dat1 exch
string def/$dat2 exch string def/$dat3 exch string def/$dat4 exch string def
/@cc1 load/@cc2 load/@cc3 load/@cc4 load}ifelse true $ncl ColorImage}ifelse
$SDF{$dsf $dsa $dsp @ss}if}bd/@cc1{currentfile $dat1 readhexstring pop}bd/@cc2
{currentfile $dat2 readhexstring pop}bd/@cc3{currentfile $dat3 readhexstring
pop}bd/@cc4{currentfile $dat4 readhexstring pop}bd/$msimage false def
/ImageCompression/None def/MaskedImage false def/DevicenImage false def
/output_color_image{@np $ncl 1 eq{DocGrayScaleSpace}{$ncl 3 eq{DocRgbSpace}
{DocCmykSpace}ifelse}ifelse setcolorspace/$dat $wid $bts mul $ncl mul 8 div
ceiling cvi 65535 min string def $ngx $llx $lly Tl $urx $llx sub $ury $lly sub
scale 8 dict begin/ImageType 1 def/Width $wid def/Height $hei abs def
/BitsPerComponent $bts def/Decode[$ncl{0 1}repeat]def/ImageMatrix[$wid 0 0 $hei
neg 0 $hei 0 gt{$hei}{0}ifelse]def/DataSource create_datasource def currentdict
end image $SDF{$dsf $dsa $dsp @ss}if}bd/simulate_devicen_image{@np $ngx
/colorantNames ImageDevicenSpace 1 get def/altColorSpace ImageDevicenSpace 2
get def/tintProc ImageDevicenSpace 3 get def/DataSource create_datasource def
/stripRows 65535 $wid $bts mul $ncl mul 8 div div floor cvi 1 max def 1
stripRows set_image_strip_parameters/maxStripIndex $hei stripRows div ceiling
cvi 1 sub def 0 1 maxStripIndex{/stripIndex exch def/$t_ury $ury stripHeight
stripIndex mul add ceiling cvi def/$t_lly $t_ury stripHeight add ceiling cvi
def stripIndex maxStripIndex eq{1 $hei maxStripIndex stripRows mul sub
set_image_strip_parameters/$t_lly $t_ury stripHeight add ceiling cvi def}if
readstrip pop @gs $llx $t_lly Tl $urx $llx sub $t_ury $t_lly sub scale 0 1 $ncl
1 sub{@gs/inkIndex exch def 0 1 stripOutBuffer length 1 sub{dup $ncl mul
inkIndex add stripBuffer exch get stripOutBuffer 3 1 roll put}for[/Separation
colorantNames inkIndex get altColorSpace{$ncl 1 sub{0}repeat $ncl inkIndex roll
tintProc}]setcolorspace inkIndex 0 gt{true setoverprint}if strip_img_dict image
@gr}for @gr}for $SDF{$dsf $dsa $dsp @ss}if}bd/output_devicen_image_alt{@np $ngx
/colorantNames ImageDevicenSpace 1 get def/altColorSpace ImageDevicenSpace 2
get def/tintProc ImageDevicenSpace 3 get def altColorSpace DocCmykSpace eq{
/numAltChannels 4 def}{altColorSpace DocRgbSpace eq{/numAltChannels 3 def}{
/numAltChannels 1 def}ifelse}ifelse/DataSource create_datasource def
altColorSpace setcolorspace/stripRows 65535 $wid $bts mul $ncl numAltChannels
max mul 8 div div floor cvi 1 max def numAltChannels stripRows
set_image_strip_parameters/maxStripIndex $hei stripRows div ceiling cvi 1 sub
def 0 1 maxStripIndex{/stripIndex exch def/$t_ury $ury stripHeight stripIndex
mul add ceiling cvi def/$t_lly $t_ury stripHeight add ceiling cvi def
stripIndex maxStripIndex eq{numAltChannels $hei maxStripIndex stripRows mul sub
set_image_strip_parameters/$t_lly $t_ury stripHeight add ceiling cvi def}if
readstrip pop @gs 0 1 stripBuffer length $ncl div cvi 1 sub{/pixelIndex xd
stripBuffer pixelIndex $ncl mul $ncl getinterval{255 div}forall tintProc exec
numAltChannels array astore/pixelAltIndex pixelIndex numAltChannels mul def
/posColorant 0 def{stripOutBuffer pixelAltIndex posColorant add 3 -1 roll 255
mul cvi put/posColorant posColorant 1 add def}forall}for $llx $t_lly Tl $urx
$llx sub $t_ury $t_lly sub scale strip_img_dict image @gr}for $SDF{$dsf $dsa
$dsp @ss}if}bd/output_devicen_image_native{@np $ngx ImageDevicenSpace
setcolorspace/scanline $wid $bts mul $ncl mul 8 div ceiling cvi 65535 min
string def/readscanline{currentfile scanline readhexstring pop}bind def $llx
$lly Tl $urx $llx sub $ury $lly sub scale 8 dict begin/ImageType 1 def/Width
$wid def/Height $hei abs def/BitsPerComponent $bts def/Decode[$ncl{0 1}repeat]
def/ImageMatrix[$wid 0 0 $hei neg 0 $hei 0 gt{$hei}{0}ifelse]def/DataSource{
readscanline}def currentdict end image $SDF{$dsf $dsa $dsp @ss}if}bd
/output_devicen_image{Level3{output_devicen_image_native}{get_simulate_devicen
{simulate_devicen_image}{output_devicen_image_alt}ifelse}ifelse}bd
/output_masked_image{/$dat $wid $bts mul $ncl mul 8 div ceiling cvi 65535 min
string def $ngx DevicenImage{ImageDevicenSpace}{$ncl 1 eq{DocGrayScaleSpace}{
$ncl 3 eq{DocRgbSpace}{DocCmykSpace}ifelse}ifelse}ifelse setcolorspace $llx
$lly Tl $urx $llx sub $ury $lly sub scale/ImageDataDict 8 dict def
ImageDataDict begin/ImageType 1 def/Width $wid def/Height $hei abs def
/BitsPerComponent $bts def/Decode[$ncl{0 1}repeat]def/ImageMatrix[$wid 0 0 $hei
neg 0 $hei 0 gt{$hei}{0}ifelse]def/DataSource create_datasource def end
/MaskedImageDict 7 dict def MaskedImageDict begin/ImageType 3 def
/InterleaveType 3 def/MaskDict ImageMaskDict def/DataDict ImageDataDict def end
MaskedImageDict image $SDF{$dsf $dsa $dsp @ss}if}bd/set_image_mask{/$mbts xd
/$mhei xd/$mwid xd/ImageMaskDict 8 dict def ImageMaskDict begin/ImageType 1 def
/Width $mwid def/Height $mhei abs def/BitsPerComponent $mbts def/DataSource
maskstream def/ImageMatrix[$mwid 0 0 $mhei neg 0 $mhei 0 gt{$mhei}{0}ifelse]
def/Decode[1 0]def end}bd/@daq{dup type/arraytype eq{aload pop}if}bd
/skip_image_body{8 rp/$ury xd/$urx xd/$lly xd/$llx xd/$ncl xd/$bts xd/$hei xd
/$wid xd DevicenImage not ImageCompression/JPEG eq or ImageCompression/RLE eq
or ImageCompression/LZW eq or{create_datasource flushfile}{/scanline $wid $bts
mul $ncl mul 8 div ceiling cvi dup 65535 gt{pop $bts $ncl mul}if string def
/upperBound $wid $hei mul $bts mul $ncl mul scanline length div cvi 1 sub def 0
1 upperBound{pop currentfile scanline readhexstring pop pop}for}ifelse}bd
/disable_raster_output{deflevel 0 eq{@rs}if/output_image load
/output_image_original exch def/output_image/skip_image_body load def
globaldict begin/bSkipDeviceNImage true def end deflevel 0 eq{@sv}if}def
/enable_raster_output{deflevel 0 eq{@rs}if/bSkipDeviceNImage where{
/bSkipDeviceNImage undef/output_image/output_image_original load def}if
deflevel 0 eq{@sv}if}def
end
%%EndResource
%%EndProlog
%%BeginSetup
wCorel18Dict begin
@BeginSysCorelDict
/$dcm matrix currentmatrix def
@ssa
1.00 setflat
/$fst 128 def
%%EndSetup

%%Page: 1 1
%%ViewingOrientation: 1 0 0 1
%%BoundingBox: 0 0 841 595
%LogicalPage: 1
%%BeginPageSetup
@sv
@sm
@sv
%%EndPageSetup
@rax %Note: Object
0.00369 0.00879 3359.99594 1679.99102 @E
/$fm 0 def
 0 O 0 @g
0.8706 0.8431 0.8118  create_rgb_color set_solid_fill
0.00369 1679.99102 m
3359.99594 1679.99102 L
3359.99594 0.00879 L
0.00369 0.00879 L
0.00369 1679.99102 L
@c
F

@rax %Note: Object
0.00369 1040.33452 1240.27030 1679.99102 @E
/$fm 0 def
 0 O 0 @g
0.9020 0.9020 0.9020  create_rgb_color set_solid_fill
0.00369 1040.33452 m
412.69266 1253.69745 850.41213 1479.31058 1240.27030 1679.99102 C
0.00369 1679.99102 L
0.00369 1040.33452 L
@c
F

@rax %Note: Object
0.00369 105.14721 3047.34047 1679.99102 @E
/$fm 0 def
 0 O 0 @g
0.9020 0.9020 0.9020  create_rgb_color set_solid_fill
2172.18019 1679.99102 m
1521.56126 1345.31518 655.02879 898.81512 0.00369 558.52186 C
0.00369 105.14721 L
762.99420 504.90454 2253.41291 1271.96957 3047.34047 1679.99102 C
2172.18019 1679.99102 L
@c
F

@rax %Note: Object
849.24142 0.00879 3359.99594 1296.26532 @E
/$fm 0 def
 0 O 0 @g
0.9020 0.9020 0.9020  create_rgb_color set_solid_fill
1720.55282 0.00879 m
2240.91043 269.65502 2844.71972 580.95241 3359.99594 846.17008 C
3359.99594 1296.26532 L
2659.47506 936.10035 1588.90224 384.82583 849.24142 0.00879 C
1720.55282 0.00879 L
@c
F

@rax %Note: Object
128.33688 144.26589 1565.11843 1583.33584 @E
/$fm 0 def
 0 O 0 @g
0.9569 0.9255 0.9137  create_rgb_color set_solid_fill
128.33688 1583.33584 m
1565.11843 1583.33584 L
1565.11843 144.26589 L
128.33688 144.26589 L
128.33688 1583.33584 L
@c
F

@rax %Note: Object
185.68517 96.66397 751.30809 144.26589 @E
/$fm 0 def
 0 O 0 @g
0.7020 0.7020 0.7020  create_rgb_color set_solid_fill
185.68517 144.26589 m
185.68517 96.66397 L
751.30809 144.26589 L
185.68517 144.26589 L
@c
F

@rax %Note: Object
938.72750 96.66397 1504.35043 144.26589 @E
/$fm 0 def
 0 O 0 @g
0.7020 0.7020 0.7020  create_rgb_color set_solid_fill
1504.35043 144.26589 m
1504.35043 96.66397 L
938.72750 144.26589 L
1504.35043 144.26589 L
@c
F

@rax %Note: Object
1794.88120 144.26589 3231.66274 1583.33584 @E
/$fm 0 def
 0 O 0 @g
0.1922 0.1804 0.2627  create_rgb_color set_solid_fill
1794.88120 1583.33584 m
3231.66274 1583.33584 L
3231.66274 144.26589 L
1794.88120 144.26589 L
1794.88120 1583.33584 L
@c
F

@rax %Note: Object
1852.22948 96.66397 2417.85241 144.26589 @E
/$fm 0 def
 0 O 0 @g
0.7020 0.7020 0.7020  create_rgb_color set_solid_fill
1852.22948 144.26589 m
1852.22948 96.66397 L
2417.85241 144.26589 L
1852.22948 144.26589 L
@c
F

@rax %Note: Object
2605.27181 96.66397 3170.89474 144.26589 @E
/$fm 0 def
 0 O 0 @g
0.7020 0.7020 0.7020  create_rgb_color set_solid_fill
3170.89474 144.26589 m
3170.89474 96.66397 L
2605.27181 144.26589 L
3170.89474 144.26589 L
@c
F

@rax %Note: Object
477.00510 726.51770 1216.44992 799.26378 @E
/$fm 1 def
 0 O 0 @g
0.1922 0.1804 0.2627  create_rgb_color set_solid_fill
477.00510 727.71817 m
524.52652 727.71817 L
524.52652 735.05197 L
484.93446 735.05197 L
484.93446 798.06104 L
477.00510 798.06104 L
477.00510 727.71817 L
@c
610.32926 762.98910 m
610.32926 767.88283 609.48170 772.52230 607.76561 776.90523 C
606.06340 781.29496 603.62334 785.14157 600.48227 788.46605 C
597.33893 791.78570 593.56545 794.40888 589.18280 796.34948 C
584.79534 798.29915 579.92003 799.26378 574.56567 799.26378 C
569.20450 799.26378 564.30624 798.27619 559.88674 796.29902 C
555.46271 794.31732 551.68016 791.65502 548.53228 788.31468 C
545.38894 784.95817 542.93754 781.09313 541.19622 776.70595 C
539.45263 772.32076 538.59118 767.67902 538.59118 762.78756 C
538.59118 757.90063 539.44583 753.26598 541.15058 748.87852 C
542.85959 744.48652 545.28803 740.63537 548.43619 737.31770 C
551.58180 734.00712 555.35499 731.36778 559.74019 729.43427 C
564.12765 727.48460 569.00069 726.51770 574.36186 726.51770 C
579.71367 726.51770 584.60740 727.50501 589.02917 729.48699 C
593.45093 731.45735 597.23802 734.11937 600.37909 737.46680 C
603.52951 740.82529 605.97411 744.69033 607.71742 749.07326 C
609.45647 753.46299 610.32926 758.09792 610.32926 762.98910 C
@c
602.09065 762.78756 m
602.09065 758.77370 601.40551 755.00022 600.02872 751.48356 C
598.65846 747.96888 596.76605 744.90803 594.35603 742.29392 C
591.94346 739.67981 589.04759 737.61789 585.66359 736.11269 C
582.27279 734.60523 578.57953 733.85376 574.56567 733.85376 C
570.54246 733.85376 566.83559 734.61883 563.46094 736.16542 C
560.07241 737.70718 557.13515 739.77392 554.66306 742.39937 C
552.17962 745.01121 550.26198 748.08822 548.88746 751.63691 C
547.51039 755.18816 546.83008 758.97524 546.83008 762.98910 C
546.83008 767.01005 547.51039 770.77417 548.88746 774.29339 C
550.26198 777.81940 552.15213 780.87798 554.56243 783.48756 C
556.96337 786.10394 559.87540 788.16586 563.25458 789.66879 C
566.63178 791.17852 570.33865 791.92772 574.36186 791.92772 C
578.37345 791.92772 582.08031 791.15783 585.46658 789.61606 C
588.85058 788.08110 591.77849 785.99849 594.25285 783.39345 C
596.73402 780.77934 598.65846 777.69326 600.02872 774.14202 C
601.40551 770.59559 602.09065 766.80850 602.09065 762.78756 C
@c
691.80661 727.71817 m
670.20633 756.44362 L
672.95339 756.91332 675.49890 757.71978 677.84258 758.84939 C
680.18627 759.99487 682.21162 761.41757 683.92545 763.12205 C
685.62992 764.83814 686.95172 766.84280 687.88885 769.14765 C
688.82825 771.46838 689.29342 774.09411 689.29342 777.04044 C
689.29342 780.18831 688.69757 783.07058 687.48576 785.64557 C
686.28501 788.22765 684.57600 790.43839 682.36526 792.28063 C
680.15197 794.11805 677.49194 795.54756 674.38063 796.54876 C
671.25798 797.55676 667.76655 798.06104 663.86920 798.06104 C
633.62721 798.06104 L
633.62721 727.71817 L
641.57272 727.71817 L
641.57272 755.05748 L
661.66753 755.05748 L
682.06280 727.71817 L
691.80661 727.71817 L
@c
681.35924 776.70595 m
681.35924 774.43313 680.91024 772.37121 679.99833 770.55902 C
679.09805 768.73521 677.84258 767.21613 676.22060 765.97682 C
674.60995 764.73269 672.70365 763.76806 670.47676 763.09002 C
668.26346 762.42104 665.85118 762.08428 663.22772 762.08428 C
641.57272 762.08428 L
641.57272 790.72498 L
663.32183 790.72498 L
669.03789 790.72498 673.46901 789.50154 676.62142 787.03398 C
679.78091 784.58939 681.35924 781.14359 681.35924 776.70595 C
@c
763.64306 798.06104 m
712.79972 798.06104 L
712.79972 727.71817 L
764.14479 727.71817 L
764.14479 734.95786 L
720.73814 734.95786 L
720.73814 759.57109 L
759.12293 759.57109 L
759.12293 766.80850 L
720.73814 766.80850 L
720.73814 790.82561 L
763.64306 790.82561 L
763.64306 798.06104 L
@c
846.02976 784.69483 m
846.02976 727.71817 L
853.96139 727.71817 L
853.96139 798.06104 L
845.92431 798.06104 L
820.30110 759.67625 L
794.67761 798.06104 L
786.64535 798.06104 L
786.64535 727.71817 L
794.38224 727.71817 L
794.38224 784.58939 L
820.00091 747.01361 L
820.40173 747.01361 L
846.02976 784.69483 L
@c
895.05184 727.71817 m
895.05184 798.06104 L
879.57780 798.06104 L
879.57780 727.71817 L
895.05184 727.71817 L
@c
974.82444 773.54192 m
974.82444 773.74573 L
974.82444 788.11540 964.67046 798.06104 947.89984 798.06104 C
919.16079 798.06104 L
919.16079 727.71817 L
934.63002 727.71817 L
934.63002 748.82580 L
946.39011 748.82580 L
962.16406 748.82580 974.82444 757.26397 974.82444 773.54192 C
@c
959.15140 773.23493 m
959.15140 767.21613 954.62646 762.58828 946.88957 762.58828 C
934.63002 762.58828 L
934.63002 784.08992 L
946.58712 784.08992 L
954.32627 784.08992 959.15140 780.37398 959.15140 773.43874 C
959.15140 773.23493 L
@c
1043.64142 748.52334 m
1043.64142 748.72261 L
1043.64142 760.98217 1035.60661 766.10976 1021.33559 769.82117 C
1009.18148 772.93928 1006.16627 774.44929 1006.16627 779.06580 C
1006.16627 779.26734 L
1006.16627 782.69017 1009.28211 785.39811 1015.21389 785.39811 C
1021.14085 785.39811 1027.26709 782.78627 1033.49424 778.47222 C
1041.53131 790.12687 L
1034.39679 795.84548 1025.66098 799.06677 1015.41317 799.06677 C
1001.04123 799.06677 990.79087 790.62633 990.79087 777.86050 C
990.79087 777.65443 L
990.79087 763.69493 999.93685 759.77490 1014.10044 756.15279 C
1025.85572 753.14693 1028.26828 751.13745 1028.26828 747.21288 C
1028.26828 747.01361 L
1028.26828 742.89430 1024.45370 740.38564 1018.12564 740.38564 C
1010.08403 740.38564 1003.45153 743.70076 997.11893 748.92217 C
987.98202 737.96627 L
996.41792 730.43773 1007.17200 726.71698 1017.82318 726.71698 C
1032.99477 726.71698 1043.64142 734.55250 1043.64142 748.52334 C
@c
1123.81739 758.37515 m
1123.81739 798.06104 L
1108.34589 798.06104 L
1108.34589 757.76570 L
1108.34589 746.61024 1102.61339 740.88737 1093.17657 740.88737 C
1083.72359 740.88737 1077.99591 746.81660 1077.99591 758.26517 C
1077.99591 798.06104 L
1062.52668 798.06104 L
1062.52668 757.86860 L
1062.52668 737.17115 1074.07814 726.61861 1092.96822 726.61861 C
1111.86028 726.61861 1123.81739 737.06570 1123.81739 758.37515 C
@c
1216.44992 727.71817 m
1216.44992 798.06104 L
1199.77313 798.06104 L
1181.27735 768.31824 L
1162.79546 798.06104 L
1146.11641 798.06104 L
1146.11641 727.71817 L
1161.28772 727.71817 L
1161.28772 773.34038 L
1180.87880 743.59757 L
1181.27735 743.59757 L
1201.07906 773.63802 L
1201.07906 727.71817 L
1216.44992 727.71817 L
@c
F

@rax %Note: Object
624.90501 656.82340 1068.54520 691.83326 @E
/$fm 1 def
 0 O 0 @g
0.1922 0.1804 0.2627  create_rgb_color set_solid_fill
658.37083 691.24904 m
649.89836 691.24904 L
641.68498 677.66287 L
633.60652 691.24904 L
624.90501 691.24904 L
637.91376 670.74605 L
637.91376 657.40535 L
645.36208 657.40535 L
645.36208 670.89288 L
658.37083 691.24904 L
@c
702.93203 674.32932 m
702.93203 674.42797 L
702.93203 684.05046 695.42872 691.83326 684.98844 691.83326 C
674.54107 691.83326 666.95528 683.94501 666.95528 674.32932 C
666.95528 674.23550 L
666.95528 664.61528 674.44951 656.82340 684.88980 656.82340 C
695.33943 656.82340 702.93203 664.70910 702.93203 674.32932 C
@c
695.14696 674.23550 m
695.14696 668.42759 690.98400 663.68976 684.98844 663.68976 C
678.99033 663.68976 674.74035 668.52624 674.74035 674.32932 C
674.74035 674.42797 L
674.74035 680.22652 678.89424 684.96463 684.88980 684.96463 C
690.88564 684.96463 695.14696 680.13043 695.14696 674.32932 C
695.14696 674.23550 L
@c
746.86110 672.15288 m
746.86110 691.24904 L
739.41506 691.24904 L
739.41506 671.86431 L
739.41506 666.49408 736.65666 663.73767 732.11102 663.73767 C
727.56794 663.73767 724.80728 666.58791 724.80728 672.10696 C
724.80728 691.24904 L
717.36350 691.24904 L
717.36350 671.90542 L
717.36350 661.94617 722.92394 656.87131 732.01493 656.87131 C
741.09912 656.87131 746.86110 661.89798 746.86110 672.15288 C
@c
792.04535 657.40535 m
783.77924 669.48605 L
788.07969 671.08762 791.03707 674.52180 791.03707 679.98387 C
791.03707 680.07770 L
791.03707 687.04724 786.24454 691.24904 778.26699 691.24904 C
762.79323 691.24904 L
762.79323 657.40535 L
770.23899 657.40535 L
770.23899 668.23058 L
776.08602 668.23058 L
783.34186 657.40535 L
792.04535 657.40535 L
@c
783.48841 679.59893 m
783.48841 676.74643 781.40580 674.81745 777.78142 674.81745 C
770.23899 674.81745 L
770.23899 684.53376 L
777.63458 684.53376 L
781.26605 684.53376 783.48841 682.88428 783.48841 679.69502 C
783.48841 679.59893 L
@c
845.06967 667.41506 m
845.06967 667.51115 L
845.06967 673.40835 841.19783 675.86910 834.32693 677.66287 C
828.47565 679.16353 827.02998 679.88976 827.02998 682.11439 C
827.02998 682.21304 L
827.02998 683.86025 828.52809 685.15937 831.38060 685.15937 C
834.23537 685.15937 837.18850 683.90391 840.18756 681.82356 C
844.05260 687.43191 L
840.62494 690.18831 836.41181 691.73915 831.48378 691.73915 C
824.56696 691.73915 819.63439 687.67483 819.63439 681.53698 C
819.63439 681.43181 L
819.63439 674.71427 824.02639 672.82186 830.85137 671.08762 C
836.50791 669.63969 837.67181 668.67279 837.67181 666.77584 C
837.67181 666.69109 L
837.67181 664.70910 835.83439 663.49276 832.78743 663.49276 C
828.92239 663.49276 825.73313 665.09405 822.68135 667.61206 C
818.28028 662.33112 L
822.33780 658.71128 827.51556 656.91723 832.64287 656.91723 C
839.94463 656.91723 845.06967 660.69071 845.06967 667.41506 C
@c
884.21499 657.40535 m
884.21499 664.17307 L
867.33893 664.17307 L
867.33893 691.24904 L
859.89515 691.24904 L
859.89515 657.40535 L
884.21499 657.40535 L
@c
930.70772 674.32932 m
930.70772 674.42797 L
930.70772 684.05046 923.21348 691.83326 912.76639 691.83326 C
902.32583 691.83326 894.72869 683.94501 894.72869 674.32932 C
894.72869 674.23550 L
894.72869 664.61528 902.22293 656.82340 912.66321 656.82340 C
923.11512 656.82340 930.70772 664.70910 930.70772 674.32932 C
@c
922.92491 674.23550 m
922.92491 668.42759 918.76422 663.68976 912.76639 663.68976 C
906.76828 663.68976 902.51376 668.52624 902.51376 674.32932 C
902.51376 674.42797 L
902.51376 680.22652 906.67899 684.96463 912.66321 684.96463 C
918.67039 684.96463 922.92491 680.13043 922.92491 674.32932 C
922.92491 674.23550 L
@c
976.42828 662.19137 m
976.42828 676.89071 L
961.72413 676.89071 L
961.72413 670.45521 L
969.22517 670.45521 L
969.22517 665.62781 L
967.33276 664.26690 964.92019 663.59565 962.21225 663.59565 C
956.21414 663.59565 951.95509 668.13676 951.95509 674.32932 C
951.95509 674.42797 L
951.95509 680.18088 956.26687 684.96463 961.68076 684.96463 C
965.59143 684.96463 967.91698 683.70661 970.52655 681.53698 C
975.21619 687.19153 L
971.68791 690.18831 968.02016 691.83326 961.92113 691.83326 C
951.67786 691.83326 944.17455 683.94501 944.17455 674.32932 C
944.17455 674.23550 L
944.17455 664.22126 951.42813 656.82340 961.96252 656.82340 C
968.15509 656.82340 972.94365 659.24277 976.42828 662.19137 C
@c
1024.90724 657.40535 m
1010.39329 691.49650 L
1003.52920 691.49650 L
989.02233 657.40535 L
996.61493 657.40535 L
999.70554 665.00022 L
1014.02929 665.00022 L
1017.12217 657.40535 L
1024.90724 657.40535 L
@c
1011.36019 671.57773 m
1002.36784 671.57773 L
1006.87209 682.54980 L
1011.36019 671.57773 L
@c
1068.54520 657.40535 m
1068.54520 691.24904 L
1061.20006 691.24904 L
1061.20006 670.40702 L
1045.33682 691.24904 L
1038.47272 691.24904 L
1038.47272 657.40535 L
1045.81786 657.40535 L
1045.81786 678.92287 L
1062.21061 657.40535 L
1068.54520 657.40535 L
@c
F

@rax %Note: Object
701.88548 837.94025 991.56983 1070.77805 @E
/$fm 0 def
 0 O 0 @g
0.7451 0.6314 0.3137  create_rgb_color set_solid_fill
751.75540 837.98646 m
751.75540 862.12743 L
729.53008 862.12743 L
729.53008 966.90359 L
790.04239 921.81345 L
858.40923 972.75543 L
858.40923 887.58312 L
921.02173 888.02022 L
928.30847 894.99288 934.30205 903.30576 938.59172 912.55011 C
886.05354 912.55011 L
886.05354 1027.82976 L
858.40923 1007.23096 L
790.04296 956.28898 L
701.88548 1021.97820 L
701.88548 837.98646 L
751.75540 837.98646 L
@c
858.40923 1070.77805 m
775.08510 1070.77805 L
775.08510 992.29521 L
789.67899 978.49871 L
802.72998 992.69461 L
802.72998 1043.13345 L
883.32775 1043.13345 L
884.23937 1043.13345 885.14844 1043.11786 886.05354 1043.08753 C
891.95414 1042.88797 897.70025 1042.04409 903.22384 1040.62450 C
909.16498 1040.62450 926.27575 1030.91726 931.36195 1027.11572 C
951.08202 1012.37669 963.92523 988.86189 963.92523 962.53625 C
963.92523 946.18261 L
963.92523 902.82047 929.08290 867.08580 886.05354 865.63162 C
885.14844 865.60044 884.23937 865.58542 883.32775 865.58542 C
802.72998 865.58542 L
802.72998 914.40425 L
789.68126 902.47663 L
774.74438 914.31893 L
775.08510 837.94025 L
883.32775 837.94025 L
884.23880 837.94025 885.14731 837.95187 886.05354 837.97483 C
944.34066 839.43411 991.56983 887.56044 991.56983 946.18261 C
991.56983 962.53625 L
991.56983 995.01477 977.07260 1024.27143 954.23017 1044.15506 C
946.83770 1050.58998 938.57102 1056.04356 929.63877 1060.30630 C
916.35364 1066.64712 901.59732 1070.35512 886.05354 1070.74403 C
885.14731 1070.76699 884.23880 1070.77805 883.32775 1070.77805 C
858.40923 1070.77805 L
@c
F

@rax %Note: Object
2143.54970 726.51770 2882.99452 799.26378 @E
/$fm 1 def
 0 O 0 @g
0.9569 0.9255 0.9137  create_rgb_color set_solid_fill
2143.54970 727.71817 m
2191.07112 727.71817 L
2191.07112 735.05197 L
2151.47906 735.05197 L
2151.47906 798.06104 L
2143.54970 798.06104 L
2143.54970 727.71817 L
@c
2276.87386 762.98910 m
2276.87386 767.88283 2276.02630 772.52230 2274.31020 776.90523 C
2272.60800 781.29496 2270.16794 785.14157 2267.02687 788.46605 C
2263.88353 791.78570 2260.11005 794.40888 2255.72740 796.34948 C
2251.33994 798.29915 2246.46463 799.26378 2241.11027 799.26378 C
2235.74910 799.26378 2230.85083 798.27619 2226.43134 796.29902 C
2222.00731 794.31732 2218.22476 791.65502 2215.07688 788.31468 C
2211.93354 784.95817 2209.48214 781.09313 2207.74082 776.70595 C
2205.99723 772.32076 2205.13578 767.67902 2205.13578 762.78756 C
2205.13578 757.90063 2205.99043 753.26598 2207.69518 748.87852 C
2209.40419 744.48652 2211.83263 740.63537 2214.98079 737.31770 C
2218.12639 734.00712 2221.89959 731.36778 2226.28479 729.43427 C
2230.67225 727.48460 2235.54529 726.51770 2240.90646 726.51770 C
2246.25827 726.51770 2251.15200 727.50501 2255.57376 729.48699 C
2259.99553 731.45735 2263.78261 734.11937 2266.92369 737.46680 C
2270.07411 740.82529 2272.51871 744.69033 2274.26202 749.07326 C
2276.00107 753.46299 2276.87386 758.09792 2276.87386 762.98910 C
@c
2268.63524 762.78756 m
2268.63524 758.77370 2267.95011 755.00022 2266.57332 751.48356 C
2265.20306 747.96888 2263.31065 744.90803 2260.90063 742.29392 C
2258.48806 739.67981 2255.59219 737.61789 2252.20819 736.11269 C
2248.81739 734.60523 2245.12413 733.85376 2241.11027 733.85376 C
2237.08706 733.85376 2233.38019 734.61883 2230.00554 736.16542 C
2226.61701 737.70718 2223.67975 739.77392 2221.20765 742.39937 C
2218.72422 745.01121 2216.80658 748.08822 2215.43206 751.63691 C
2214.05499 755.18816 2213.37468 758.97524 2213.37468 762.98910 C
2213.37468 767.01005 2214.05499 770.77417 2215.43206 774.29339 C
2216.80658 777.81940 2218.69672 780.87798 2221.10702 783.48756 C
2223.50797 786.10394 2226.42000 788.16586 2229.79918 789.66879 C
2233.17638 791.17852 2236.88324 791.92772 2240.90646 791.92772 C
2244.91805 791.92772 2248.62491 791.15783 2252.01118 789.61606 C
2255.39518 788.08110 2258.32309 785.99849 2260.79745 783.39345 C
2263.27861 780.77934 2265.20306 777.69326 2266.57332 774.14202 C
2267.95011 770.59559 2268.63524 766.80850 2268.63524 762.78756 C
@c
2358.35121 727.71817 m
2336.75093 756.44362 L
2339.49798 756.91332 2342.04350 757.71978 2344.38718 758.84939 C
2346.73087 759.99487 2348.75622 761.41757 2350.47005 763.12205 C
2352.17452 764.83814 2353.49631 766.84280 2354.43345 769.14765 C
2355.37285 771.46838 2355.83802 774.09411 2355.83802 777.04044 C
2355.83802 780.18831 2355.24217 783.07058 2354.03036 785.64557 C
2352.82961 788.22765 2351.12060 790.43839 2348.90986 792.28063 C
2346.69657 794.11805 2344.03654 795.54756 2340.92523 796.54876 C
2337.80258 797.55676 2334.31115 798.06104 2330.41380 798.06104 C
2300.17181 798.06104 L
2300.17181 727.71817 L
2308.11732 727.71817 L
2308.11732 755.05748 L
2328.21213 755.05748 L
2348.60740 727.71817 L
2358.35121 727.71817 L
@c
2347.90384 776.70595 m
2347.90384 774.43313 2347.45483 772.37121 2346.54293 770.55902 C
2345.64265 768.73521 2344.38718 767.21613 2342.76520 765.97682 C
2341.15455 764.73269 2339.24825 763.76806 2337.02135 763.09002 C
2334.80806 762.42104 2332.39578 762.08428 2329.77231 762.08428 C
2308.11732 762.08428 L
2308.11732 790.72498 L
2329.86643 790.72498 L
2335.58249 790.72498 2340.01361 789.50154 2343.16602 787.03398 C
2346.32551 784.58939 2347.90384 781.14359 2347.90384 776.70595 C
@c
2430.18765 798.06104 m
2379.34431 798.06104 L
2379.34431 727.71817 L
2430.68939 727.71817 L
2430.68939 734.95786 L
2387.28274 734.95786 L
2387.28274 759.57109 L
2425.66753 759.57109 L
2425.66753 766.80850 L
2387.28274 766.80850 L
2387.28274 790.82561 L
2430.18765 790.82561 L
2430.18765 798.06104 L
@c
2512.57436 784.69483 m
2512.57436 727.71817 L
2520.50598 727.71817 L
2520.50598 798.06104 L
2512.46891 798.06104 L
2486.84570 759.67625 L
2461.22220 798.06104 L
2453.18995 798.06104 L
2453.18995 727.71817 L
2460.92683 727.71817 L
2460.92683 784.58939 L
2486.54551 747.01361 L
2486.94633 747.01361 L
2512.57436 784.69483 L
@c
2561.59644 727.71817 m
2561.59644 798.06104 L
2546.12239 798.06104 L
2546.12239 727.71817 L
2561.59644 727.71817 L
@c
2641.36904 773.54192 m
2641.36904 773.74573 L
2641.36904 788.11540 2631.21506 798.06104 2614.44444 798.06104 C
2585.70539 798.06104 L
2585.70539 727.71817 L
2601.17461 727.71817 L
2601.17461 748.82580 L
2612.93471 748.82580 L
2628.70866 748.82580 2641.36904 757.26397 2641.36904 773.54192 C
@c
2625.69600 773.23493 m
2625.69600 767.21613 2621.17106 762.58828 2613.43417 762.58828 C
2601.17461 762.58828 L
2601.17461 784.08992 L
2613.13172 784.08992 L
2620.87087 784.08992 2625.69600 780.37398 2625.69600 773.43874 C
2625.69600 773.23493 L
@c
2710.18602 748.52334 m
2710.18602 748.72261 L
2710.18602 760.98217 2702.15121 766.10976 2687.88019 769.82117 C
2675.72608 772.93928 2672.71087 774.44929 2672.71087 779.06580 C
2672.71087 779.26734 L
2672.71087 782.69017 2675.82671 785.39811 2681.75849 785.39811 C
2687.68545 785.39811 2693.81169 782.78627 2700.03883 778.47222 C
2708.07591 790.12687 L
2700.94139 795.84548 2692.20557 799.06677 2681.95776 799.06677 C
2667.58583 799.06677 2657.33546 790.62633 2657.33546 777.86050 C
2657.33546 777.65443 L
2657.33546 763.69493 2666.48145 759.77490 2680.64504 756.15279 C
2692.40031 753.14693 2694.81288 751.13745 2694.81288 747.21288 C
2694.81288 747.01361 L
2694.81288 742.89430 2690.99830 740.38564 2684.67024 740.38564 C
2676.62863 740.38564 2669.99613 743.70076 2663.66353 748.92217 C
2654.52661 737.96627 L
2662.96252 730.43773 2673.71660 726.71698 2684.36778 726.71698 C
2699.53937 726.71698 2710.18602 734.55250 2710.18602 748.52334 C
@c
2790.36198 758.37515 m
2790.36198 798.06104 L
2774.89049 798.06104 L
2774.89049 757.76570 L
2774.89049 746.61024 2769.15798 740.88737 2759.72117 740.88737 C
2750.26819 740.88737 2744.54050 746.81660 2744.54050 758.26517 C
2744.54050 798.06104 L
2729.07128 798.06104 L
2729.07128 757.86860 L
2729.07128 737.17115 2740.62274 726.61861 2759.51282 726.61861 C
2778.40488 726.61861 2790.36198 737.06570 2790.36198 758.37515 C
@c
2882.99452 727.71817 m
2882.99452 798.06104 L
2866.31773 798.06104 L
2847.82195 768.31824 L
2829.34006 798.06104 L
2812.66101 798.06104 L
2812.66101 727.71817 L
2827.83231 727.71817 L
2827.83231 773.34038 L
2847.42340 743.59757 L
2847.82195 743.59757 L
2867.62365 773.63802 L
2867.62365 727.71817 L
2882.99452 727.71817 L
@c
F

@rax %Note: Object
2291.44961 656.82340 2735.08980 691.83326 @E
/$fm 1 def
 0 O 0 @g
0.9569 0.9255 0.9137  create_rgb_color set_solid_fill
2324.91543 691.24904 m
2316.44296 691.24904 L
2308.22957 677.66287 L
2300.15112 691.24904 L
2291.44961 691.24904 L
2304.45836 670.74605 L
2304.45836 657.40535 L
2311.90668 657.40535 L
2311.90668 670.89288 L
2324.91543 691.24904 L
@c
2369.47663 674.32932 m
2369.47663 674.42797 L
2369.47663 684.05046 2361.97332 691.83326 2351.53304 691.83326 C
2341.08567 691.83326 2333.49987 683.94501 2333.49987 674.32932 C
2333.49987 674.23550 L
2333.49987 664.61528 2340.99411 656.82340 2351.43439 656.82340 C
2361.88403 656.82340 2369.47663 664.70910 2369.47663 674.32932 C
@c
2361.69156 674.23550 m
2361.69156 668.42759 2357.52860 663.68976 2351.53304 663.68976 C
2345.53493 663.68976 2341.28494 668.52624 2341.28494 674.32932 C
2341.28494 674.42797 L
2341.28494 680.22652 2345.43883 684.96463 2351.43439 684.96463 C
2357.43024 684.96463 2361.69156 680.13043 2361.69156 674.32932 C
2361.69156 674.23550 L
@c
2413.40570 672.15288 m
2413.40570 691.24904 L
2405.95965 691.24904 L
2405.95965 671.86431 L
2405.95965 666.49408 2403.20126 663.73767 2398.65562 663.73767 C
2394.11254 663.73767 2391.35187 666.58791 2391.35187 672.10696 C
2391.35187 691.24904 L
2383.90809 691.24904 L
2383.90809 671.90542 L
2383.90809 661.94617 2389.46854 656.87131 2398.55953 656.87131 C
2407.64372 656.87131 2413.40570 661.89798 2413.40570 672.15288 C
@c
2458.58995 657.40535 m
2450.32384 669.48605 L
2454.62428 671.08762 2457.58167 674.52180 2457.58167 679.98387 C
2457.58167 680.07770 L
2457.58167 687.04724 2452.78913 691.24904 2444.81159 691.24904 C
2429.33783 691.24904 L
2429.33783 657.40535 L
2436.78359 657.40535 L
2436.78359 668.23058 L
2442.63061 668.23058 L
2449.88646 657.40535 L
2458.58995 657.40535 L
@c
2450.03301 679.59893 m
2450.03301 676.74643 2447.95039 674.81745 2444.32602 674.81745 C
2436.78359 674.81745 L
2436.78359 684.53376 L
2444.17918 684.53376 L
2447.81065 684.53376 2450.03301 682.88428 2450.03301 679.69502 C
2450.03301 679.59893 L
@c
2511.61427 667.41506 m
2511.61427 667.51115 L
2511.61427 673.40835 2507.74243 675.86910 2500.87153 677.66287 C
2495.02025 679.16353 2493.57458 679.88976 2493.57458 682.11439 C
2493.57458 682.21304 L
2493.57458 683.86025 2495.07269 685.15937 2497.92520 685.15937 C
2500.77997 685.15937 2503.73310 683.90391 2506.73216 681.82356 C
2510.59720 687.43191 L
2507.16954 690.18831 2502.95641 691.73915 2498.02838 691.73915 C
2491.11156 691.73915 2486.17899 687.67483 2486.17899 681.53698 C
2486.17899 681.43181 L
2486.17899 674.71427 2490.57099 672.82186 2497.39597 671.08762 C
2503.05250 669.63969 2504.21641 668.67279 2504.21641 666.77584 C
2504.21641 666.69109 L
2504.21641 664.70910 2502.37899 663.49276 2499.33203 663.49276 C
2495.46699 663.49276 2492.27773 665.09405 2489.22595 667.61206 C
2484.82488 662.33112 L
2488.88239 658.71128 2494.06016 656.91723 2499.18746 656.91723 C
2506.48923 656.91723 2511.61427 660.69071 2511.61427 667.41506 C
@c
2550.75959 657.40535 m
2550.75959 664.17307 L
2533.88353 664.17307 L
2533.88353 691.24904 L
2526.43975 691.24904 L
2526.43975 657.40535 L
2550.75959 657.40535 L
@c
2597.25231 674.32932 m
2597.25231 674.42797 L
2597.25231 684.05046 2589.75808 691.83326 2579.31099 691.83326 C
2568.87043 691.83326 2561.27329 683.94501 2561.27329 674.32932 C
2561.27329 674.23550 L
2561.27329 664.61528 2568.76753 656.82340 2579.20781 656.82340 C
2589.65972 656.82340 2597.25231 664.70910 2597.25231 674.32932 C
@c
2589.46951 674.23550 m
2589.46951 668.42759 2585.30882 663.68976 2579.31099 663.68976 C
2573.31288 663.68976 2569.05836 668.52624 2569.05836 674.32932 C
2569.05836 674.42797 L
2569.05836 680.22652 2573.22359 684.96463 2579.20781 684.96463 C
2585.21499 684.96463 2589.46951 680.13043 2589.46951 674.32932 C
2589.46951 674.23550 L
@c
2642.97288 662.19137 m
2642.97288 676.89071 L
2628.26872 676.89071 L
2628.26872 670.45521 L
2635.76976 670.45521 L
2635.76976 665.62781 L
2633.87735 664.26690 2631.46479 663.59565 2628.75685 663.59565 C
2622.75874 663.59565 2618.49969 668.13676 2618.49969 674.32932 C
2618.49969 674.42797 L
2618.49969 680.18088 2622.81146 684.96463 2628.22535 684.96463 C
2632.13603 684.96463 2634.46157 683.70661 2637.07115 681.53698 C
2641.76079 687.19153 L
2638.23250 690.18831 2634.56476 691.83326 2628.46573 691.83326 C
2618.22246 691.83326 2610.71915 683.94501 2610.71915 674.32932 C
2610.71915 674.23550 L
2610.71915 664.22126 2617.97272 656.82340 2628.50712 656.82340 C
2634.69969 656.82340 2639.48825 659.24277 2642.97288 662.19137 C
@c
2691.45184 657.40535 m
2676.93789 691.49650 L
2670.07380 691.49650 L
2655.56693 657.40535 L
2663.15953 657.40535 L
2666.25014 665.00022 L
2680.57389 665.00022 L
2683.66677 657.40535 L
2691.45184 657.40535 L
@c
2677.90479 671.57773 m
2668.91244 671.57773 L
2673.41669 682.54980 L
2677.90479 671.57773 L
@c
2735.08980 657.40535 m
2735.08980 691.24904 L
2727.74466 691.24904 L
2727.74466 670.40702 L
2711.88142 691.24904 L
2705.01732 691.24904 L
2705.01732 657.40535 L
2712.36246 657.40535 L
2712.36246 678.92287 L
2728.75521 657.40535 L
2735.08980 657.40535 L
@c
F

@rax %Note: Object
2368.43008 837.94025 2658.11443 1070.77805 @E
/$fm 0 def
 0 O 0 @g
0.9569 0.9255 0.9137  create_rgb_color set_solid_fill
2418.30000 837.98646 m
2418.30000 862.12743 L
2396.07468 862.12743 L
2396.07468 966.90359 L
2456.58699 921.81345 L
2524.95383 972.75543 L
2524.95383 887.58312 L
2587.56633 888.02022 L
2594.85307 894.99288 2600.84665 903.30576 2605.13631 912.55011 C
2552.59814 912.55011 L
2552.59814 1027.82976 L
2524.95383 1007.23096 L
2456.58756 956.28898 L
2368.43008 1021.97820 L
2368.43008 837.98646 L
2418.30000 837.98646 L
@c
2524.95383 1070.77805 m
2441.62970 1070.77805 L
2441.62970 992.29521 L
2456.22359 978.49871 L
2469.27458 992.69461 L
2469.27458 1043.13345 L
2549.87235 1043.13345 L
2550.78397 1043.13345 2551.69304 1043.11786 2552.59814 1043.08753 C
2558.49874 1042.88797 2564.24485 1042.04409 2569.76844 1040.62450 C
2575.70957 1040.62450 2592.82035 1030.91726 2597.90655 1027.11572 C
2617.62661 1012.37669 2630.46983 988.86189 2630.46983 962.53625 C
2630.46983 946.18261 L
2630.46983 902.82047 2595.62750 867.08580 2552.59814 865.63162 C
2551.69304 865.60044 2550.78397 865.58542 2549.87235 865.58542 C
2469.27458 865.58542 L
2469.27458 914.40425 L
2456.22586 902.47663 L
2441.28898 914.31893 L
2441.62970 837.94025 L
2549.87235 837.94025 L
2550.78340 837.94025 2551.69191 837.95187 2552.59814 837.97483 C
2610.88526 839.43411 2658.11443 887.56044 2658.11443 946.18261 C
2658.11443 962.53625 L
2658.11443 995.01477 2643.61720 1024.27143 2620.77477 1044.15506 C
2613.38230 1050.58998 2605.11562 1056.04356 2596.18337 1060.30630 C
2582.89824 1066.64712 2568.14192 1070.35512 2552.59814 1070.74403 C
2551.69191 1070.76699 2550.78340 1070.77805 2549.87235 1070.77805 C
2524.95383 1070.77805 L
@c
F

%%PageTrailer
@rs
@rs
%%Trailer
@EndSysCorelDict
end
%%DocumentSuppliedResources: procset wCorel18Dict 18.0 0
%%EOF
